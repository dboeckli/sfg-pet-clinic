<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>guru.springframework.sfg-pet-clinic</groupId>
        <artifactId>sfg-pet-clinic</artifactId>
        <version>0.0.3-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>sfg-pet-clinic-web</artifactId>
    <name>${project.artifactId}</name>

    <properties>
        <github.acions.build>false</github.acions.build>
        <skip.docker.publish>true</skip.docker.publish>
        <skip.start.stop.springboot>false</skip.start.stop.springboot>

        <!--suppress UnresolvedMavenProperty -->
        <buildNumber>${git.commit.id.abbrev}</buildNumber>

        <!-- Web dependencies -->
        <!-- TODO: 
        use latest. Upgrading is breaking the gui. Check developer console which indicates that the petclinic.css is not found.
        When upgrading, update wro.xml as well.
        <webjars-bootstrap.version>5.3.3</webjars-bootstrap.version>
        -->
        <webjars-bootstrap.version>5.3.3</webjars-bootstrap.version>
        <webjars-jquery-ui.version>1.14.1</webjars-jquery-ui.version>
        <webjars-jquery.version>3.7.1</webjars-jquery.version>
        <wro4j.version>2.1.1</wro4j.version>
    </properties>

    <profiles>
        <profile>
            <id>ci-cd</id>
            <activation>
                <property>
                    <name>env.GITHUB_ACTIONS</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <github.acions.build>true</github.acions.build>
                <skip.docker.publish>false</skip.docker.publish>
            </properties>
        </profile>
    </profiles>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.webjars.npm</groupId>
                <artifactId>minimatch</artifactId>
                <version>3.1.2</version>
            </dependency>
        </dependencies>

    </dependencyManagement>

    <dependencies>


        <dependency>
            <groupId>guru.springframework.sfg-pet-clinic</groupId>
            <artifactId>sfg-pet-clinic-data</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <!-- webjars -->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap</artifactId>
            <version>${webjars-bootstrap.version}</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>webjars-locator-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>jquery</artifactId>
            <version>${webjars-jquery.version}</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>jquery-ui</artifactId>
            <version>${webjars-jquery-ui.version}</version>
        </dependency>

        <!-- wro4j -->
        <dependency>
            <groupId>ro.isdc.wro4j</groupId>
            <artifactId>wro4j-extensions</artifactId>
            <version>${wro4j.version}</version>
        </dependency>

        <!--
        <dependency>
            <groupId>com.google.closure</groupId>
            <artifactId>compiler</artifactId>
            <version>20100917</version>
        </dependency>
        -->
        <!-- end of webjars -->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-docker-compose</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <!-- we need a port to be able to start the local profile -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>reserve-tomcat-port</id>
                        <goals>
                            <goal>reserve-network-port</goal>
                        </goals>
                        <phase>process-resources</phase>
                        <configuration>
                            <portNames>
                                <portName>jmx.server.port</portName>
                                <portName>tomcat.http.port</portName>
                            </portNames>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>

            <!--
            <plugin>
                <groupId>ro.isdc.wro4j</groupId>
                <artifactId>wro4j-maven-plugin</artifactId>
                <version>${wro4j.version}</version>
                <configuration>
                    <detail>true</detail>
                    <minimize>false</minimize>
                    <wroManagerFactory>ro.isdc.wro.maven.plugin.manager.factory.ConfigurableWroManagerFactory</wroManagerFactory>
                    <wroFile>${basedir}/src/main/wro/wro.xml</wroFile>
                    <cssDestinationFolder>${project.build.directory}/classes/static/resources/css</cssDestinationFolder>
                    <extraConfigFile>${basedir}/src/main/wro/wro.properties</extraConfigFile>
                    <contextFolder>${basedir}/src/main/scss</contextFolder>
                </configuration>
                <executions>
                    <execution>
                        <id>generate-css</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.webjars</groupId>
                        <artifactId>bootstrap</artifactId>
                        <version>${webjars-bootstrap.version}</version>
                    </dependency>

                    <dependency>
                        <groupId>ro.isdc.wro4j</groupId>
                        <artifactId>wro4j-extensions</artifactId>
                        <version>${wro4j.version}</version>
                    </dependency>

                    <dependency>
                        <groupId>org.webjars.npm</groupId>
                        <artifactId>minimatch</artifactId>
                        <version>3.1.2</version>
                    </dependency>
                    
                    <dependency>
                        <groupId>org.mockito</groupId>
                        <artifactId>mockito-core</artifactId>
                        <version>${mockito.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            -->

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <jvmArguments>-Dspring.application.admin.enabled=true</jvmArguments>
                    <layers>
                        <enabled>true</enabled>
                        <includeLayerTools>true</includeLayerTools>
                    </layers>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>

                <executions>
                    <execution>
                        <id>add-build-infos</id>
                        <goals>
                            <goal>build-info</goal>
                        </goals>
                        <configuration>
                            <additionalProperties>
                                <mavenUser>${user.name}</mavenUser>
                                <javaVersion>${java.version}</javaVersion>
                                <javaVendor>${java.vendor}</javaVendor>
                                <commit-id>${buildNumber}</commit-id>
                            </additionalProperties>
                        </configuration>
                    </execution>

                    <execution>
                        <id>start-springboot-app</id>
                        <goals>
                            <goal>start</goal>
                            <goal>stop</goal>
                        </goals>
                        <phase>post-integration-test</phase>
                        <configuration>
                            <skip>${skip.start.stop.springboot}</skip>
                            <wait>1000</wait> <!-- 1000 milliseconds is default -->
                            <maxAttempts>120</maxAttempts> <!-- 30 attempts is default, combined with wait it results to 30 sec. We wait 60 seconds. -->
                            <arguments>
                                <argument>-Xmx1024m</argument>
                                <argument>--server.port=${tomcat.http.port}</argument>
                                <argument>--spring.cloud.kubernetes.enabled=false</argument>
                            </arguments>
                            <!--<jmxPort>${jmx.server.port}</jmxPort>-->
                        </configuration>
                    </execution>

                    <execution>
                        <id>build-docker-image</id>
                        <goals>
                            <goal>build-image-no-fork</goal>
                        </goals>
                        <phase>install</phase>
                        <configuration>
                            <image>
                                <name>local/${project.artifactId}:latest</name>
                                <tags>
                                    local/${project.artifactId}:${project.version}
                                </tags>
                                <publish>false</publish>
                            </image>
                        </configuration>
                    </execution>

                    <execution>
                        <id>publish-docker-image-to-github</id>
                        <goals>
                            <goal>build-image-no-fork</goal>
                        </goals>
                        <phase>deploy</phase>
                        <configuration>
                            <skip>${skip.docker.publish}</skip>
                            <image>
                                <name>ghcr.io/${project.organization.name}/${project.artifactId}:latest</name>
                                <tags>
                                    ghcr.io/${project.organization.name}/${project.artifactId}:${project.version}
                                </tags>
                                <publish>true</publish>
                            </image>
                            <docker>
                                <publishRegistry>
                                    <!-- GITHUB_ACTOR and GITHUB_TOKEN are set by gitHub Actions -->
                                    <!--suppress UnresolvedMavenProperty -->
                                    <username>${env.GITHUB_ACTOR}</username>
                                    <!--suppress UnresolvedMavenProperty -->
                                    <password>${env.GITHUB_TOKEN}</password>
                                    <url>https://ghcr.io</url><!-- gitHub packages -->
                                </publishRegistry>
                            </docker>
                        </configuration>
                    </execution>

                    <execution>
                        <id>publish-docker-image-to-docker-hub</id>
                        <goals>
                            <goal>build-image-no-fork</goal>
                        </goals>
                        <phase>deploy</phase>
                        <configuration>
                            <skip>${skip.docker.publish}</skip>
                            <image>
                                <!--suppress UnresolvedMavenProperty -->
                                <name>${env.DOCKER_USER}/${project.artifactId}:latest</name>
                                <tags>
                                    <!--suppress UnresolvedMavenProperty -->
                                    ${env.DOCKER_USER}/${project.artifactId}:${project.version}
                                </tags>
                                <publish>true</publish>
                            </image>
                            <docker>
                                <publishRegistry>
                                    <!-- DOCKER_USER and DOCKER_TOKEN are set by gitHub Actions -->
                                    <!--suppress UnresolvedMavenProperty -->
                                    <username>${env.DOCKER_USER}</username>
                                    <!--suppress UnresolvedMavenProperty -->
                                    <password>${env.DOCKER_TOKEN}</password>
                                    <url>https://index.docker.io/v1/</url>
                                </publishRegistry>
                            </docker>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


        </plugins>
    </build>

</project>
